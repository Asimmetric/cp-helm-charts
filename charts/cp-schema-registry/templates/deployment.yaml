{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta2
{{- end }}
kind: Deployment
metadata:
  name: {{ template "cp-schema-registry.fullname" . }}
  labels:
    app: {{ template "cp-schema-registry.name" . }}
    chart: {{ template "cp-schema-registry.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "cp-schema-registry.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "cp-schema-registry.name" . }}
        release: {{ .Release.Name }}
      {{- if or .Values.podAnnotations .Values.jmx.prometheus.enabled .Values.datadog.jmx.enabled .Values.datadog.logs.enabled}}
      annotations:
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- if .Values.jmx.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.jmx.prometheus.port | quote }}
      {{- end }}
      {{- if .Values.datadog.jmx.enabled }}
        ad.datadoghq.com/{{ template "cp-schema-registry.fullname" . }}.check_names: '["confluent_platform"]'
        ad.datadoghq.com/{{ template "cp-schema-registry.fullname" . }}.init_configs: '[{"is_jmx":true,"collect_default_metrics":true}]'
        ad.datadoghq.com/{{ template "cp-schema-registry.fullname" . }}.instances: |
          [
            {
              "host":"%%host%%",
              "port":{{ .Values.jmx.port | quote }},
              "max_returned_metrics":{{ .Values.datadog.jmx.max_returned_metrics }}
            }
          ]
      {{- end }}
      {{- if .Values.datadog.logs.enabled }}
        ad.datadoghq.com/{{ template "cp-schema-registry.fullname" . }}.logs: '[{"source":"confluent_platform","service":"confluent_platform"}]'
      {{- end }}
      {{- end }}
    spec:
      securityContext:
      {{- if .Values.securityContext }}
{{ toYaml .Values.securityContext | indent 8 }}
      {{- end}}
      containers:
        {{- if .Values.jmx.prometheus.enabled }}
        - name: prometheus-jmx-exporter
          image: "{{ .Values.jmx.prometheus.image }}:{{ .Values.jmx.prometheus.imageTag }}"
          imagePullPolicy: "{{ .Values.jmx.prometheus.imagePullPolicy }}"
          command:
          - java
          - -XX:+UnlockExperimentalVMOptions
          - -XX:+UseCGroupMemoryLimitForHeap
          - -XX:MaxRAMFraction=1
          - -XshowSettings:vm
          - -jar
          - jmx_prometheus_httpserver.jar
          - {{ .Values.jmx.prometheus.port | quote }}
          - /etc/jmx-schema-registry/jmx-schema-registry-prometheus.yml
          ports:
          - containerPort: {{ .Values.jmx.prometheus.port }}
          resources:
{{ toYaml .Values.jmx.prometheus.resources | indent 12 }}
          volumeMounts:
          - name: jmx-config
            mountPath: /etc/jmx-schema-registry
        {{- end }}
        - name: {{ template "cp-schema-registry.fullname" . }}
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          ports:
            - name: schema-registry
              containerPort: {{ .Values.servicePort }}
              protocol: TCP
            {{- if .Values.jmx.enabled }}
            - containerPort: {{ .Values.jmx.port }}
              name: jmx
            {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
          - name: SCHEMA_REGISTRY_HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SCHEMA_REGISTRY_LISTENERS
            value: http://0.0.0.0:{{ .Values.servicePort }}
          - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
            value: {{ template "cp-schema-registry.kafka.bootstrapServers" . }}
          - name: SCHEMA_REGISTRY_KAFKASTORE_GROUP_ID
            value: {{ template "cp-schema-registry.groupId" . }}
          - name: SCHEMA_REGISTRY_MASTER_ELIGIBILITY
            value: "true"
          - name: SCHEMA_REGISTRY_HEAP_OPTS
            value: "{{ .Values.heapOptions }}"
          {{ range $configName, $configValue := .Values.configurationOverrides }}
          - name: SCHEMA_REGISTRY_{{ $configName | replace "." "_" | upper }}
            value: {{ $configValue | quote }}
          {{ end }}
          {{- range $key, $value := .Values.customEnv }}
          - name: {{ $key | quote }}
            value: {{ $value | quote }}
          {{- end }}
          {{- if .Values.schemaRegistryOpts }}
          - name: SCHEMA_REGISTRY_OPTS
            value: "{{ .Values.schemaRegistryOpts }}"
          {{- end }}
          {{- if .Values.jmx.enabled }}
          - name: KAFKA_JMX_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: KAFKA_JMX_PORT
            value: "{{ .Values.jmx.port }}"
          - name: SCHEMA_REGISTRY_JMX_OPTS
            value: >-
              -Djava.rmi.server.hostname=$(KAFKA_JMX_HOSTNAME)
              -Dcom.sun.management.jmxremote
              -Dcom.sun.management.jmxremote.authenticate=false
              -Dcom.sun.management.jmxremote.ssl=false
              -Dcom.sun.management.jmxremote.local.only=false
              -Dcom.sun.management.jmxremote.port={{ .Values.jmx.port }}
              -Dcom.sun.management.jmxremote.rmi.port={{ .Values.jmx.port }}
          {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.jmx.prometheus.enabled }}
      - name: jmx-config
        configMap:
          name: {{ template "cp-schema-registry.fullname" . }}-jmx-configmap
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
